(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();class f extends Error{constructor(e){var t,s,i,n;super("ClientResponseError"),this.url="",this.status=0,this.response={},this.isAbort=!1,this.originalError=null,Object.setPrototypeOf(this,f.prototype),e!==null&&typeof e=="object"&&(this.url=typeof e.url=="string"?e.url:"",this.status=typeof e.status=="number"?e.status:0,this.isAbort=!!e.isAbort,this.originalError=e.originalError,e.response!==null&&typeof e.response=="object"?this.response=e.response:e.data!==null&&typeof e.data=="object"?this.response=e.data:this.response={}),this.originalError||e instanceof f||(this.originalError=e),typeof DOMException<"u"&&e instanceof DOMException&&(this.isAbort=!0),this.name="ClientResponseError "+this.status,this.message=(t=this.response)==null?void 0:t.message,this.message||(this.isAbort?this.message="The request was autocancelled. You can find more info in https://github.com/pocketbase/js-sdk#auto-cancellation.":(n=(i=(s=this.originalError)==null?void 0:s.cause)==null?void 0:i.message)!=null&&n.includes("ECONNREFUSED ::1")?this.message="Failed to connect to the PocketBase server. Try changing the SDK URL from localhost to 127.0.0.1 (https://github.com/pocketbase/js-sdk/issues/21).":this.message="Something went wrong while processing your request.")}get data(){return this.response}toJSON(){return{...this}}}const v=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function _(r,e){const t={};if(typeof r!="string")return t;const s=Object.assign({},e||{}).decode||B;let i=0;for(;i<r.length;){const n=r.indexOf("=",i);if(n===-1)break;let o=r.indexOf(";",i);if(o===-1)o=r.length;else if(o<n){i=r.lastIndexOf(";",n-1)+1;continue}const a=r.slice(i,n).trim();if(t[a]===void 0){let c=r.slice(n+1,o).trim();c.charCodeAt(0)===34&&(c=c.slice(1,-1));try{t[a]=s(c)}catch{t[a]=c}}i=o+1}return t}function R(r,e,t){const s=Object.assign({},t||{}),i=s.encode||F;if(!v.test(r))throw new TypeError("argument name is invalid");const n=i(e);if(n&&!v.test(n))throw new TypeError("argument val is invalid");let o=r+"="+n;if(s.maxAge!=null){const a=s.maxAge-0;if(isNaN(a)||!isFinite(a))throw new TypeError("option maxAge is invalid");o+="; Max-Age="+Math.floor(a)}if(s.domain){if(!v.test(s.domain))throw new TypeError("option domain is invalid");o+="; Domain="+s.domain}if(s.path){if(!v.test(s.path))throw new TypeError("option path is invalid");o+="; Path="+s.path}if(s.expires){if(!function(c){return Object.prototype.toString.call(c)==="[object Date]"||c instanceof Date}(s.expires)||isNaN(s.expires.valueOf()))throw new TypeError("option expires is invalid");o+="; Expires="+s.expires.toUTCString()}if(s.httpOnly&&(o+="; HttpOnly"),s.secure&&(o+="; Secure"),s.priority)switch(typeof s.priority=="string"?s.priority.toLowerCase():s.priority){case"low":o+="; Priority=Low";break;case"medium":o+="; Priority=Medium";break;case"high":o+="; Priority=High";break;default:throw new TypeError("option priority is invalid")}if(s.sameSite)switch(typeof s.sameSite=="string"?s.sameSite.toLowerCase():s.sameSite){case!0:o+="; SameSite=Strict";break;case"lax":o+="; SameSite=Lax";break;case"strict":o+="; SameSite=Strict";break;case"none":o+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return o}function B(r){return r.indexOf("%")!==-1?decodeURIComponent(r):r}function F(r){return encodeURIComponent(r)}const D=typeof navigator<"u"&&navigator.product==="ReactNative"||typeof global<"u"&&global.HermesInternal;let j;function w(r){if(r)try{const e=decodeURIComponent(j(r.split(".")[1]).split("").map(function(t){return"%"+("00"+t.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(e)||{}}catch{}return{}}function L(r,e=0){let t=w(r);return!(Object.keys(t).length>0&&(!t.exp||t.exp-e>Date.now()/1e3))}j=typeof atob!="function"||D?r=>{let e=String(r).replace(/=+$/,"");if(e.length%4==1)throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");for(var t,s,i=0,n=0,o="";s=e.charAt(n++);~s&&(t=i%4?64*t+s:s,i++%4)?o+=String.fromCharCode(255&t>>(-2*i&6)):0)s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(s);return o}:atob;const A="pb_auth";class K{constructor(){this.baseToken="",this.baseModel=null,this._onChangeCallbacks=[]}get token(){return this.baseToken}get model(){return this.baseModel}get isValid(){return!L(this.token)}get isAdmin(){return w(this.token).type==="admin"}get isAuthRecord(){return w(this.token).type==="authRecord"}save(e,t){this.baseToken=e||"",this.baseModel=t||null,this.triggerChange()}clear(){this.baseToken="",this.baseModel=null,this.triggerChange()}loadFromCookie(e,t=A){const s=_(e||"")[t]||"";let i={};try{i=JSON.parse(s),(typeof i===null||typeof i!="object"||Array.isArray(i))&&(i={})}catch{}this.save(i.token||"",i.model||null)}exportToCookie(e,t=A){var c,l;const s={secure:!0,sameSite:!0,httpOnly:!0,path:"/"},i=w(this.token);s.expires=i!=null&&i.exp?new Date(1e3*i.exp):new Date("1970-01-01"),e=Object.assign({},s,e);const n={token:this.token,model:this.model?JSON.parse(JSON.stringify(this.model)):null};let o=R(t,JSON.stringify(n),e);const a=typeof Blob<"u"?new Blob([o]).size:o.length;if(n.model&&a>4096){n.model={id:(c=n==null?void 0:n.model)==null?void 0:c.id,email:(l=n==null?void 0:n.model)==null?void 0:l.email};const b=["collectionId","username","verified"];for(const m in this.model)b.includes(m)&&(n.model[m]=this.model[m]);o=R(t,JSON.stringify(n),e)}return o}onChange(e,t=!1){return this._onChangeCallbacks.push(e),t&&e(this.token,this.model),()=>{for(let s=this._onChangeCallbacks.length-1;s>=0;s--)if(this._onChangeCallbacks[s]==e)return delete this._onChangeCallbacks[s],void this._onChangeCallbacks.splice(s,1)}}triggerChange(){for(const e of this._onChangeCallbacks)e&&e(this.token,this.model)}}class M extends K{constructor(e="pocketbase_auth"){super(),this.storageFallback={},this.storageKey=e,this._bindStorageEvent()}get token(){return(this._storageGet(this.storageKey)||{}).token||""}get model(){return(this._storageGet(this.storageKey)||{}).model||null}save(e,t){this._storageSet(this.storageKey,{token:e,model:t}),super.save(e,t)}clear(){this._storageRemove(this.storageKey),super.clear()}_storageGet(e){if(typeof window<"u"&&(window!=null&&window.localStorage)){const t=window.localStorage.getItem(e)||"";try{return JSON.parse(t)}catch{return t}}return this.storageFallback[e]}_storageSet(e,t){if(typeof window<"u"&&(window!=null&&window.localStorage)){let s=t;typeof t!="string"&&(s=JSON.stringify(t)),window.localStorage.setItem(e,s)}else this.storageFallback[e]=t}_storageRemove(e){var t;typeof window<"u"&&(window!=null&&window.localStorage)&&((t=window.localStorage)==null||t.removeItem(e)),delete this.storageFallback[e]}_bindStorageEvent(){typeof window<"u"&&(window!=null&&window.localStorage)&&window.addEventListener&&window.addEventListener("storage",e=>{if(e.key!=this.storageKey)return;const t=this._storageGet(this.storageKey)||{};super.save(t.token||"",t.model||null)})}}class g{constructor(e){this.client=e}}class W extends g{async getAll(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/settings",e)}async update(e,t){return t=Object.assign({method:"PATCH",body:e},t),this.client.send("/api/settings",t)}async testS3(e="storage",t){return t=Object.assign({method:"POST",body:{filesystem:e}},t),this.client.send("/api/settings/test/s3",t).then(()=>!0)}async testEmail(e,t,s){return s=Object.assign({method:"POST",body:{email:e,template:t}},s),this.client.send("/api/settings/test/email",s).then(()=>!0)}async generateAppleClientSecret(e,t,s,i,n,o){return o=Object.assign({method:"POST",body:{clientId:e,teamId:t,keyId:s,privateKey:i,duration:n}},o),this.client.send("/api/settings/apple/generate-client-secret",o)}}class E extends g{decode(e){return e}async getFullList(e,t){if(typeof e=="number")return this._getFullList(e,t);let s=500;return(t=Object.assign({},e,t)).batch&&(s=t.batch,delete t.batch),this._getFullList(s,t)}async getList(e=1,t=30,s){return(s=Object.assign({method:"GET"},s)).query=Object.assign({page:e,perPage:t},s.query),this.client.send(this.baseCrudPath,s).then(i=>{var n;return i.items=((n=i.items)==null?void 0:n.map(o=>this.decode(o)))||[],i})}async getFirstListItem(e,t){return(t=Object.assign({requestKey:"one_by_filter_"+this.baseCrudPath+"_"+e},t)).query=Object.assign({filter:e,skipTotal:1},t.query),this.getList(1,1,t).then(s=>{var i;if(!((i=s==null?void 0:s.items)!=null&&i.length))throw new f({status:404,response:{code:404,message:"The requested resource wasn't found.",data:{}}});return s.items[0]})}async getOne(e,t){if(!e)throw new f({url:this.client.buildUrl(this.baseCrudPath+"/"),status:404,response:{code:404,message:"Missing required record id.",data:{}}});return t=Object.assign({method:"GET"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),t).then(s=>this.decode(s))}async create(e,t){return t=Object.assign({method:"POST",body:e},t),this.client.send(this.baseCrudPath,t).then(s=>this.decode(s))}async update(e,t,s){return s=Object.assign({method:"PATCH",body:t},s),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),s).then(i=>this.decode(i))}async delete(e,t){return t=Object.assign({method:"DELETE"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e),t).then(()=>!0)}_getFullList(e=500,t){(t=t||{}).query=Object.assign({skipTotal:1},t.query);let s=[],i=async n=>this.getList(n,e||500,t).then(o=>{const a=o.items;return s=s.concat(a),a.length==o.perPage?i(n+1):s});return i(1)}}function p(r,e,t,s){const i=s!==void 0;return i||t!==void 0?i?(console.warn(r),e.body=Object.assign({},e.body,t),e.query=Object.assign({},e.query,s),e):Object.assign(e,t):e}function k(r){var e;(e=r._resetAutoRefresh)==null||e.call(r)}class H extends E{get baseCrudPath(){return"/api/admins"}async update(e,t,s){return super.update(e,t,s).then(i=>{var n,o;return((n=this.client.authStore.model)==null?void 0:n.id)===i.id&&((o=this.client.authStore.model)==null?void 0:o.collectionId)===void 0&&this.client.authStore.save(this.client.authStore.token,i),i})}async delete(e,t){return super.delete(e,t).then(s=>{var i,n;return s&&((i=this.client.authStore.model)==null?void 0:i.id)===e&&((n=this.client.authStore.model)==null?void 0:n.collectionId)===void 0&&this.client.authStore.clear(),s})}authResponse(e){const t=this.decode((e==null?void 0:e.admin)||{});return e!=null&&e.token&&(e!=null&&e.admin)&&this.client.authStore.save(e.token,t),Object.assign({},e,{token:(e==null?void 0:e.token)||"",admin:t})}async authWithPassword(e,t,s,i){let n={method:"POST",body:{identity:e,password:t}};n=p("This form of authWithPassword(email, pass, body?, query?) is deprecated. Consider replacing it with authWithPassword(email, pass, options?).",n,s,i);const o=n.autoRefreshThreshold;delete n.autoRefreshThreshold,n.autoRefresh||k(this.client);let a=await this.client.send(this.baseCrudPath+"/auth-with-password",n);return a=this.authResponse(a),o&&function(l,b,m,O){k(l);const y=l.beforeSend,h=l.authStore.model,P=l.authStore.onChange((u,d)=>{(!u||(d==null?void 0:d.id)!=(h==null?void 0:h.id)||(d!=null&&d.collectionId||h!=null&&h.collectionId)&&(d==null?void 0:d.collectionId)!=(h==null?void 0:h.collectionId))&&k(l)});l._resetAutoRefresh=function(){P(),l.beforeSend=y,delete l._resetAutoRefresh},l.beforeSend=async(u,d)=>{var I;const N=l.authStore.token;if((I=d.query)!=null&&I.autoRefresh)return y?y(u,d):{url:u,sendOptions:d};let T=l.authStore.isValid;if(T&&L(l.authStore.token,b))try{await m()}catch{T=!1}T||await O();const C=d.headers||{};for(let S in C)if(S.toLowerCase()=="authorization"&&N==C[S]&&l.authStore.token){C[S]=l.authStore.token;break}return d.headers=C,y?y(u,d):{url:u,sendOptions:d}}}(this.client,o,()=>this.authRefresh({autoRefresh:!0}),()=>this.authWithPassword(e,t,Object.assign({autoRefresh:!0},n))),a}async authRefresh(e,t){let s={method:"POST"};return s=p("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",s,e,t),this.client.send(this.baseCrudPath+"/auth-refresh",s).then(this.authResponse.bind(this))}async requestPasswordReset(e,t,s){let i={method:"POST",body:{email:e}};return i=p("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",i,t,s),this.client.send(this.baseCrudPath+"/request-password-reset",i).then(()=>!0)}async confirmPasswordReset(e,t,s,i,n){let o={method:"POST",body:{token:e,password:t,passwordConfirm:s}};return o=p("This form of confirmPasswordReset(resetToken, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(resetToken, password, passwordConfirm, options?).",o,i,n),this.client.send(this.baseCrudPath+"/confirm-password-reset",o).then(()=>!0)}}const V=["requestKey","$cancelKey","$autoCancel","fetch","headers","body","query","params","cache","credentials","headers","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","window"];function x(r){if(r){r.query=r.query||{};for(let e in r)V.includes(e)||(r.query[e]=r[e],delete r[e])}}class U extends g{constructor(){super(...arguments),this.clientId="",this.eventSource=null,this.subscriptions={},this.lastSentSubscriptions=[],this.maxConnectTimeout=15e3,this.reconnectAttempts=0,this.maxReconnectAttempts=1/0,this.predefinedReconnectIntervals=[200,300,500,1e3,1200,1500,2e3],this.pendingConnects=[]}get isConnected(){return!!this.eventSource&&!!this.clientId&&!this.pendingConnects.length}async subscribe(e,t,s){var o;if(!e)throw new Error("topic must be set.");let i=e;if(s){x(s);const a="options="+encodeURIComponent(JSON.stringify({query:s.query,headers:s.headers}));i+=(i.includes("?")?"&":"?")+a}const n=function(a){const c=a;let l;try{l=JSON.parse(c==null?void 0:c.data)}catch{}t(l||{})};return this.subscriptions[i]||(this.subscriptions[i]=[]),this.subscriptions[i].push(n),this.isConnected?this.subscriptions[i].length===1?await this.submitSubscriptions():(o=this.eventSource)==null||o.addEventListener(i,n):await this.connect(),async()=>this.unsubscribeByTopicAndListener(e,n)}async unsubscribe(e){var s;let t=!1;if(e){const i=this.getSubscriptionsByTopic(e);for(let n in i)if(this.hasSubscriptionListeners(n)){for(let o of this.subscriptions[n])(s=this.eventSource)==null||s.removeEventListener(n,o);delete this.subscriptions[n],t||(t=!0)}}else this.subscriptions={};this.hasSubscriptionListeners()?t&&await this.submitSubscriptions():this.disconnect()}async unsubscribeByPrefix(e){var s;let t=!1;for(let i in this.subscriptions)if((i+"?").startsWith(e)){t=!0;for(let n of this.subscriptions[i])(s=this.eventSource)==null||s.removeEventListener(i,n);delete this.subscriptions[i]}t&&(this.hasSubscriptionListeners()?await this.submitSubscriptions():this.disconnect())}async unsubscribeByTopicAndListener(e,t){var n;let s=!1;const i=this.getSubscriptionsByTopic(e);for(let o in i){if(!Array.isArray(this.subscriptions[o])||!this.subscriptions[o].length)continue;let a=!1;for(let c=this.subscriptions[o].length-1;c>=0;c--)this.subscriptions[o][c]===t&&(a=!0,delete this.subscriptions[o][c],this.subscriptions[o].splice(c,1),(n=this.eventSource)==null||n.removeEventListener(o,t));a&&(this.subscriptions[o].length||delete this.subscriptions[o],s||this.hasSubscriptionListeners(o)||(s=!0))}this.hasSubscriptionListeners()?s&&await this.submitSubscriptions():this.disconnect()}hasSubscriptionListeners(e){var t,s;if(this.subscriptions=this.subscriptions||{},e)return!!((t=this.subscriptions[e])!=null&&t.length);for(let i in this.subscriptions)if((s=this.subscriptions[i])!=null&&s.length)return!0;return!1}async submitSubscriptions(){if(this.clientId)return this.addAllSubscriptionListeners(),this.lastSentSubscriptions=this.getNonEmptySubscriptionKeys(),this.client.send("/api/realtime",{method:"POST",body:{clientId:this.clientId,subscriptions:this.lastSentSubscriptions},requestKey:this.getSubscriptionsCancelKey()}).catch(e=>{if(!(e!=null&&e.isAbort))throw e})}getSubscriptionsCancelKey(){return"realtime_"+this.clientId}getSubscriptionsByTopic(e){const t={};e=e.includes("?")?e:e+"?";for(let s in this.subscriptions)(s+"?").startsWith(e)&&(t[s]=this.subscriptions[s]);return t}getNonEmptySubscriptionKeys(){const e=[];for(let t in this.subscriptions)this.subscriptions[t].length&&e.push(t);return e}addAllSubscriptionListeners(){if(this.eventSource){this.removeAllSubscriptionListeners();for(let e in this.subscriptions)for(let t of this.subscriptions[e])this.eventSource.addEventListener(e,t)}}removeAllSubscriptionListeners(){if(this.eventSource)for(let e in this.subscriptions)for(let t of this.subscriptions[e])this.eventSource.removeEventListener(e,t)}async connect(){if(!(this.reconnectAttempts>0))return new Promise((e,t)=>{this.pendingConnects.push({resolve:e,reject:t}),this.pendingConnects.length>1||this.initConnect()})}initConnect(){this.disconnect(!0),clearTimeout(this.connectTimeoutId),this.connectTimeoutId=setTimeout(()=>{this.connectErrorHandler(new Error("EventSource connect took too long."))},this.maxConnectTimeout),this.eventSource=new EventSource(this.client.buildUrl("/api/realtime")),this.eventSource.onerror=e=>{this.connectErrorHandler(new Error("Failed to establish realtime connection."))},this.eventSource.addEventListener("PB_CONNECT",e=>{const t=e;this.clientId=t==null?void 0:t.lastEventId,this.submitSubscriptions().then(async()=>{let s=3;for(;this.hasUnsentSubscriptions()&&s>0;)s--,await this.submitSubscriptions()}).then(()=>{for(let i of this.pendingConnects)i.resolve();this.pendingConnects=[],this.reconnectAttempts=0,clearTimeout(this.reconnectTimeoutId),clearTimeout(this.connectTimeoutId);const s=this.getSubscriptionsByTopic("PB_CONNECT");for(let i in s)for(let n of s[i])n(e)}).catch(s=>{this.clientId="",this.connectErrorHandler(s)})})}hasUnsentSubscriptions(){const e=this.getNonEmptySubscriptionKeys();if(e.length!=this.lastSentSubscriptions.length)return!0;for(const t of e)if(!this.lastSentSubscriptions.includes(t))return!0;return!1}connectErrorHandler(e){if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),!this.clientId&&!this.reconnectAttempts||this.reconnectAttempts>this.maxReconnectAttempts){for(let s of this.pendingConnects)s.reject(new f(e));return this.pendingConnects=[],void this.disconnect()}this.disconnect(!0);const t=this.predefinedReconnectIntervals[this.reconnectAttempts]||this.predefinedReconnectIntervals[this.predefinedReconnectIntervals.length-1];this.reconnectAttempts++,this.reconnectTimeoutId=setTimeout(()=>{this.initConnect()},t)}disconnect(e=!1){var t;if(clearTimeout(this.connectTimeoutId),clearTimeout(this.reconnectTimeoutId),this.removeAllSubscriptionListeners(),this.client.cancelRequest(this.getSubscriptionsCancelKey()),(t=this.eventSource)==null||t.close(),this.eventSource=null,this.clientId="",!e){this.reconnectAttempts=0;for(let s of this.pendingConnects)s.resolve();this.pendingConnects=[]}}}class $ extends E{constructor(e,t){super(e),this.collectionIdOrName=t}get baseCrudPath(){return this.baseCollectionPath+"/records"}get baseCollectionPath(){return"/api/collections/"+encodeURIComponent(this.collectionIdOrName)}async subscribe(e,t,s){if(!e)throw new Error("Missing topic.");if(!t)throw new Error("Missing subscription callback.");return this.client.realtime.subscribe(this.collectionIdOrName+"/"+e,t,s)}async unsubscribe(e){return e?this.client.realtime.unsubscribe(this.collectionIdOrName+"/"+e):this.client.realtime.unsubscribeByPrefix(this.collectionIdOrName)}async getFullList(e,t){if(typeof e=="number")return super.getFullList(e,t);const s=Object.assign({},e,t);return super.getFullList(s)}async getList(e=1,t=30,s){return super.getList(e,t,s)}async getFirstListItem(e,t){return super.getFirstListItem(e,t)}async getOne(e,t){return super.getOne(e,t)}async create(e,t){return super.create(e,t)}async update(e,t,s){return super.update(e,t,s).then(i=>{var n,o,a;return((n=this.client.authStore.model)==null?void 0:n.id)!==(i==null?void 0:i.id)||((o=this.client.authStore.model)==null?void 0:o.collectionId)!==this.collectionIdOrName&&((a=this.client.authStore.model)==null?void 0:a.collectionName)!==this.collectionIdOrName||this.client.authStore.save(this.client.authStore.token,i),i})}async delete(e,t){return super.delete(e,t).then(s=>{var i,n,o;return!s||((i=this.client.authStore.model)==null?void 0:i.id)!==e||((n=this.client.authStore.model)==null?void 0:n.collectionId)!==this.collectionIdOrName&&((o=this.client.authStore.model)==null?void 0:o.collectionName)!==this.collectionIdOrName||this.client.authStore.clear(),s})}authResponse(e){const t=this.decode((e==null?void 0:e.record)||{});return this.client.authStore.save(e==null?void 0:e.token,t),Object.assign({},e,{token:(e==null?void 0:e.token)||"",record:t})}async listAuthMethods(e){return e=Object.assign({method:"GET"},e),this.client.send(this.baseCollectionPath+"/auth-methods",e).then(t=>Object.assign({},t,{usernamePassword:!!(t!=null&&t.usernamePassword),emailPassword:!!(t!=null&&t.emailPassword),authProviders:Array.isArray(t==null?void 0:t.authProviders)?t==null?void 0:t.authProviders:[]}))}async authWithPassword(e,t,s,i){let n={method:"POST",body:{identity:e,password:t}};return n=p("This form of authWithPassword(usernameOrEmail, pass, body?, query?) is deprecated. Consider replacing it with authWithPassword(usernameOrEmail, pass, options?).",n,s,i),this.client.send(this.baseCollectionPath+"/auth-with-password",n).then(o=>this.authResponse(o))}async authWithOAuth2Code(e,t,s,i,n,o,a){let c={method:"POST",body:{provider:e,code:t,codeVerifier:s,redirectUrl:i,createData:n}};return c=p("This form of authWithOAuth2Code(provider, code, codeVerifier, redirectUrl, createData?, body?, query?) is deprecated. Consider replacing it with authWithOAuth2Code(provider, code, codeVerifier, redirectUrl, createData?, options?).",c,o,a),this.client.send(this.baseCollectionPath+"/auth-with-oauth2",c).then(l=>this.authResponse(l))}async authWithOAuth2(...e){if(e.length>1||typeof(e==null?void 0:e[0])=="string")return console.warn("PocketBase: This form of authWithOAuth2() is deprecated and may get removed in the future. Please replace with authWithOAuth2Code() OR use the authWithOAuth2() realtime form as shown in https://pocketbase.io/docs/authentication/#oauth2-integration."),this.authWithOAuth2Code((e==null?void 0:e[0])||"",(e==null?void 0:e[1])||"",(e==null?void 0:e[2])||"",(e==null?void 0:e[3])||"",(e==null?void 0:e[4])||{},(e==null?void 0:e[5])||{},(e==null?void 0:e[6])||{});const t=(e==null?void 0:e[0])||{},s=(await this.listAuthMethods()).authProviders.find(c=>c.name===t.provider);if(!s)throw new f(new Error(`Missing or invalid provider "${t.provider}".`));const i=this.client.buildUrl("/api/oauth2-redirect"),n=new U(this.client);let o=null;function a(){o==null||o.close(),n.unsubscribe()}return t.urlCallback||(o=q(void 0)),new Promise(async(c,l)=>{var b;try{await n.subscribe("@oauth2",async h=>{const P=n.clientId;try{if(!h.state||P!==h.state)throw new Error("State parameters don't match.");if(h.error||!h.code)throw new Error("OAuth2 redirect error or missing code: "+h.error);const u=Object.assign({},t);delete u.provider,delete u.scopes,delete u.createData,delete u.urlCallback;const d=await this.authWithOAuth2Code(s.name,h.code,s.codeVerifier,i,t.createData,u);c(d)}catch(u){l(new f(u))}a()});const m={state:n.clientId};(b=t.scopes)!=null&&b.length&&(m.scope=t.scopes.join(" "));const O=this._replaceQueryParams(s.authUrl+i,m);await(t.urlCallback||function(h){o?o.location.href=h:o=q(h)})(O)}catch(m){a(),l(new f(m))}})}async authRefresh(e,t){let s={method:"POST"};return s=p("This form of authRefresh(body?, query?) is deprecated. Consider replacing it with authRefresh(options?).",s,e,t),this.client.send(this.baseCollectionPath+"/auth-refresh",s).then(i=>this.authResponse(i))}async requestPasswordReset(e,t,s){let i={method:"POST",body:{email:e}};return i=p("This form of requestPasswordReset(email, body?, query?) is deprecated. Consider replacing it with requestPasswordReset(email, options?).",i,t,s),this.client.send(this.baseCollectionPath+"/request-password-reset",i).then(()=>!0)}async confirmPasswordReset(e,t,s,i,n){let o={method:"POST",body:{token:e,password:t,passwordConfirm:s}};return o=p("This form of confirmPasswordReset(token, password, passwordConfirm, body?, query?) is deprecated. Consider replacing it with confirmPasswordReset(token, password, passwordConfirm, options?).",o,i,n),this.client.send(this.baseCollectionPath+"/confirm-password-reset",o).then(()=>!0)}async requestVerification(e,t,s){let i={method:"POST",body:{email:e}};return i=p("This form of requestVerification(email, body?, query?) is deprecated. Consider replacing it with requestVerification(email, options?).",i,t,s),this.client.send(this.baseCollectionPath+"/request-verification",i).then(()=>!0)}async confirmVerification(e,t,s){let i={method:"POST",body:{token:e}};return i=p("This form of confirmVerification(token, body?, query?) is deprecated. Consider replacing it with confirmVerification(token, options?).",i,t,s),this.client.send(this.baseCollectionPath+"/confirm-verification",i).then(()=>{const n=w(e),o=this.client.authStore.model;return o&&!o.verified&&o.id===n.id&&o.collectionId===n.collectionId&&(o.verified=!0,this.client.authStore.save(this.client.authStore.token,o)),!0})}async requestEmailChange(e,t,s){let i={method:"POST",body:{newEmail:e}};return i=p("This form of requestEmailChange(newEmail, body?, query?) is deprecated. Consider replacing it with requestEmailChange(newEmail, options?).",i,t,s),this.client.send(this.baseCollectionPath+"/request-email-change",i).then(()=>!0)}async confirmEmailChange(e,t,s,i){let n={method:"POST",body:{token:e,password:t}};return n=p("This form of confirmEmailChange(token, password, body?, query?) is deprecated. Consider replacing it with confirmEmailChange(token, password, options?).",n,s,i),this.client.send(this.baseCollectionPath+"/confirm-email-change",n).then(()=>{const o=w(e),a=this.client.authStore.model;return a&&a.id===o.id&&a.collectionId===o.collectionId&&this.client.authStore.clear(),!0})}async listExternalAuths(e,t){return t=Object.assign({method:"GET"},t),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e)+"/external-auths",t)}async unlinkExternalAuth(e,t,s){return s=Object.assign({method:"DELETE"},s),this.client.send(this.baseCrudPath+"/"+encodeURIComponent(e)+"/external-auths/"+encodeURIComponent(t),s).then(()=>!0)}_replaceQueryParams(e,t={}){let s=e,i="";e.indexOf("?")>=0&&(s=e.substring(0,e.indexOf("?")),i=e.substring(e.indexOf("?")+1));const n={},o=i.split("&");for(const a of o){if(a=="")continue;const c=a.split("=");n[decodeURIComponent(c[0].replace(/\+/g," "))]=decodeURIComponent((c[1]||"").replace(/\+/g," "))}for(let a in t)t.hasOwnProperty(a)&&(t[a]==null?delete n[a]:n[a]=t[a]);i="";for(let a in n)n.hasOwnProperty(a)&&(i!=""&&(i+="&"),i+=encodeURIComponent(a.replace(/%20/g,"+"))+"="+encodeURIComponent(n[a].replace(/%20/g,"+")));return i!=""?s+"?"+i:s}}function q(r){if(typeof window>"u"||!(window!=null&&window.open))throw new f(new Error("Not in a browser context - please pass a custom urlCallback function."));let e=1024,t=768,s=window.innerWidth,i=window.innerHeight;e=e>s?s:e,t=t>i?i:t;let n=s/2-e/2,o=i/2-t/2;return window.open(r,"popup_window","width="+e+",height="+t+",top="+o+",left="+n+",resizable,menubar=no")}class G extends E{get baseCrudPath(){return"/api/collections"}async import(e,t=!1,s){return s=Object.assign({method:"PUT",body:{collections:e,deleteMissing:t}},s),this.client.send(this.baseCrudPath+"/import",s).then(()=>!0)}}class J extends g{async getList(e=1,t=30,s){return(s=Object.assign({method:"GET"},s)).query=Object.assign({page:e,perPage:t},s.query),this.client.send("/api/logs",s)}async getOne(e,t){if(!e)throw new f({url:this.client.buildUrl("/api/logs/"),status:404,response:{code:404,message:"Missing required log id.",data:{}}});return t=Object.assign({method:"GET"},t),this.client.send("/api/logs/"+encodeURIComponent(e),t)}async getStats(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/logs/stats",e)}}class z extends g{async check(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/health",e)}}class Z extends g{getUrl(e,t,s={}){if(!t||!(e!=null&&e.id)||!(e!=null&&e.collectionId)&&!(e!=null&&e.collectionName))return"";const i=[];i.push("api"),i.push("files"),i.push(encodeURIComponent(e.collectionId||e.collectionName)),i.push(encodeURIComponent(e.id)),i.push(encodeURIComponent(t));let n=this.client.buildUrl(i.join("/"));if(Object.keys(s).length){s.download===!1&&delete s.download;const o=new URLSearchParams(s);n+=(n.includes("?")?"&":"?")+o}return n}async getToken(e){return e=Object.assign({method:"POST"},e),this.client.send("/api/files/token",e).then(t=>(t==null?void 0:t.token)||"")}}class Q extends g{async getFullList(e){return e=Object.assign({method:"GET"},e),this.client.send("/api/backups",e)}async create(e,t){return t=Object.assign({method:"POST",body:{name:e}},t),this.client.send("/api/backups",t).then(()=>!0)}async upload(e,t){return t=Object.assign({method:"POST",body:e},t),this.client.send("/api/backups/upload",t).then(()=>!0)}async delete(e,t){return t=Object.assign({method:"DELETE"},t),this.client.send(`/api/backups/${encodeURIComponent(e)}`,t).then(()=>!0)}async restore(e,t){return t=Object.assign({method:"POST"},t),this.client.send(`/api/backups/${encodeURIComponent(e)}/restore`,t).then(()=>!0)}getDownloadUrl(e,t){return this.client.buildUrl(`/api/backups/${encodeURIComponent(t)}?token=${encodeURIComponent(e)}`)}}class Y{constructor(e="/",t,s="en-US"){this.cancelControllers={},this.recordServices={},this.enableAutoCancellation=!0,this.baseUrl=e,this.lang=s,this.authStore=t||new M,this.admins=new H(this),this.collections=new G(this),this.files=new Z(this),this.logs=new J(this),this.settings=new W(this),this.realtime=new U(this),this.health=new z(this),this.backups=new Q(this)}collection(e){return this.recordServices[e]||(this.recordServices[e]=new $(this,e)),this.recordServices[e]}autoCancellation(e){return this.enableAutoCancellation=!!e,this}cancelRequest(e){return this.cancelControllers[e]&&(this.cancelControllers[e].abort(),delete this.cancelControllers[e]),this}cancelAllRequests(){for(let e in this.cancelControllers)this.cancelControllers[e].abort();return this.cancelControllers={},this}filter(e,t){if(!t)return e;for(let s in t){let i=t[s];switch(typeof i){case"boolean":case"number":i=""+i;break;case"string":i="'"+i.replace(/'/g,"\\'")+"'";break;default:i=i===null?"null":i instanceof Date?"'"+i.toISOString().replace("T"," ")+"'":"'"+JSON.stringify(i).replace(/'/g,"\\'")+"'"}e=e.replaceAll("{:"+s+"}",i)}return e}getFileUrl(e,t,s={}){return this.files.getUrl(e,t,s)}buildUrl(e){var s;let t=this.baseUrl;return typeof window>"u"||!window.location||t.startsWith("https://")||t.startsWith("http://")||(t=(s=window.location.origin)!=null&&s.endsWith("/")?window.location.origin.substring(0,window.location.origin.length-1):window.location.origin||"",this.baseUrl.startsWith("/")||(t+=window.location.pathname||"/",t+=t.endsWith("/")?"":"/"),t+=this.baseUrl),e&&(t+=t.endsWith("/")?"":"/",t+=e.startsWith("/")?e.substring(1):e),t}async send(e,t){t=this.initSendOptions(e,t);let s=this.buildUrl(e);if(this.beforeSend){const i=Object.assign({},await this.beforeSend(s,t));i.url!==void 0||i.options!==void 0?(s=i.url||s,t=i.options||t):Object.keys(i).length&&(t=i,console!=null&&console.warn&&console.warn("Deprecated format of beforeSend return: please use `return { url, options }`, instead of `return options`."))}if(t.query!==void 0){const i=this.serializeQueryParams(t.query);i&&(s+=(s.includes("?")?"&":"?")+i),delete t.query}return this.getHeader(t.headers,"Content-Type")=="application/json"&&t.body&&typeof t.body!="string"&&(t.body=JSON.stringify(t.body)),(t.fetch||fetch)(s,t).then(async i=>{let n={};try{n=await i.json()}catch{}if(this.afterSend&&(n=await this.afterSend(i,n)),i.status>=400)throw new f({url:i.url,status:i.status,data:n});return n}).catch(i=>{throw new f(i)})}initSendOptions(e,t){if((t=Object.assign({method:"GET"},t)).body=this.convertToFormDataIfNeeded(t.body),x(t),t.query=Object.assign({},t.params,t.query),t.requestKey===void 0&&(t.$autoCancel===!1||t.query.$autoCancel===!1?t.requestKey=null:(t.$cancelKey||t.query.$cancelKey)&&(t.requestKey=t.$cancelKey||t.query.$cancelKey)),delete t.$autoCancel,delete t.query.$autoCancel,delete t.$cancelKey,delete t.query.$cancelKey,this.getHeader(t.headers,"Content-Type")!==null||this.isFormData(t.body)||(t.headers=Object.assign({},t.headers,{"Content-Type":"application/json"})),this.getHeader(t.headers,"Accept-Language")===null&&(t.headers=Object.assign({},t.headers,{"Accept-Language":this.lang})),this.authStore.token&&this.getHeader(t.headers,"Authorization")===null&&(t.headers=Object.assign({},t.headers,{Authorization:this.authStore.token})),this.enableAutoCancellation&&t.requestKey!==null){const s=t.requestKey||(t.method||"GET")+e;delete t.requestKey,this.cancelRequest(s);const i=new AbortController;this.cancelControllers[s]=i,t.signal=i.signal}return t}convertToFormDataIfNeeded(e){if(typeof FormData>"u"||e===void 0||typeof e!="object"||e===null||this.isFormData(e)||!this.hasBlobField(e))return e;const t=new FormData;for(const s in e){const i=e[s];if(typeof i!="object"||this.hasBlobField({data:i})){const n=Array.isArray(i)?i:[i];for(let o of n)t.append(s,o)}else{let n={};n[s]=i,t.append("@jsonPayload",JSON.stringify(n))}}return t}hasBlobField(e){for(const t in e){const s=Array.isArray(e[t])?e[t]:[e[t]];for(const i of s)if(typeof Blob<"u"&&i instanceof Blob||typeof File<"u"&&i instanceof File)return!0}return!1}getHeader(e,t){e=e||{},t=t.toLowerCase();for(let s in e)if(s.toLowerCase()==t)return e[s];return null}isFormData(e){return e&&(e.constructor.name==="FormData"||typeof FormData<"u"&&e instanceof FormData)}serializeQueryParams(e){const t=[];for(const s in e){if(e[s]===null)continue;const i=e[s],n=encodeURIComponent(s);if(Array.isArray(i))for(const o of i)t.push(n+"="+encodeURIComponent(o));else i instanceof Date?t.push(n+"="+encodeURIComponent(i.toISOString())):typeof i!==null&&typeof i=="object"?t.push(n+"="+encodeURIComponent(JSON.stringify(i))):t.push(n+"="+encodeURIComponent(i))}return t.join("&")}}new Y("https://yooniverse.pockethost.io/");class X extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const e=document.createElement("style");e.textContent="@import 'src/styles/layout/_footer.scss';",this.shadowRoot.innerHTML=`
    <style>
      ${e.textContext}
    </style>
    <footer class="footer">
      <section class="footer_contents">
        <nav class="footer_util">
          <span><a href="/">고객센터</a></span>
          <span><a href="/">이용약관</a></span>
          <span><a href="/">개인정보처리방침</a></span>
          <span><a href="/">청소년 보호정책</a></span>
          <span><a href="/">법적고지</a></span>
          <span><a href="/">이벤트</a></span>
          <span><a href="/">인재채용</a></span>
        </nav>
        <div class="copyright_container">
          <p>
            <span>대표이사 : YANG JIEUL</span>
            <span>사업자정보확인</span>
            <span>사업자등록번호 : 188-88-01893</span>
            <span>통신판매신고번호 : 2020-서울마포-3641호</span>
          </p>
          <p>
            <span
              >사업장 : 서울특별시 마포구 상암산로 34, DMC디지털큐브
              15층(상암동)</span
            >
            <span>호스팅사업자 : 씨제이올리브네트웍스(주)</span>
          </p>
          <p>
            <span>고객문의 바로가기</span>
            <span>대표메일 : tving@cj.net</span>
            <span>고객센터 : 1670-1525 (평일/주말 09시~18시, 공휴일 휴무)</span>
          </p>
          <p>
            <span
              >ENM 시청자 상담실(편성 문의 및 시청자 의견) : 080-080-0780</span
            >
            <span>Mnet 고객센터(방송편성문의) : 185501631</span>
          </p>
        </div>
        <div class="SNS">
          <div class="SNS_icon youtube">
            <a href="/">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="34"
                height="30"
                viewBox="0 0 34 30"
                fill="none"
              >
                <path
                  d="M31.9906 7.27049C31.6307 5.88475 30.5705 4.79338 29.2243 4.42301C26.7843 3.75 16.9999 3.75 16.9999 3.75C16.9999 3.75 7.21566 3.75 4.77555 4.42301C3.42937 4.79344 2.36913 5.88475 2.00928 7.27049C1.35547 9.78223 1.35547 15.0227 1.35547 15.0227C1.35547 15.0227 1.35547 20.2632 2.00928 22.775C2.36913 24.1607 3.42937 25.2066 4.77555 25.577C7.21566 26.25 16.9999 26.25 16.9999 26.25C16.9999 26.25 26.7842 26.25 29.2243 25.577C30.5705 25.2066 31.6307 24.1607 31.9906 22.775C32.6444 20.2632 32.6444 15.0227 32.6444 15.0227C32.6444 15.0227 32.6444 9.78223 31.9906 7.27049ZM13.7999 19.7807V10.2647L21.9777 15.0229L13.7999 19.7807Z"
                  fill="#6B6B6B"
                />
              </svg>
            </a>
          </div>
          <div class="SNS_icon instagram">
            <a href="/">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="34"
                height="38"
                viewBox="0 0 34 38"
                fill="none"
              >
                <g clip-path="url(#clip0_93_7377)">
                  <path
                    d="M17.0065 10.7073C12.4202 10.7073 8.72085 14.4066 8.72085 18.993C8.72085 23.5793 12.4202 27.2786 17.0065 27.2786C21.5928 27.2786 25.2922 23.5793 25.2922 18.993C25.2922 14.4066 21.5928 10.7073 17.0065 10.7073ZM17.0065 24.3797C14.0427 24.3797 11.6198 21.964 11.6198 18.993C11.6198 16.0219 14.0355 13.6062 17.0065 13.6062C19.9775 13.6062 22.3933 16.0219 22.3933 18.993C22.3933 21.964 19.9703 24.3797 17.0065 24.3797ZM27.5637 10.3684C27.5637 11.4428 26.6984 12.301 25.6311 12.301C24.5566 12.301 23.6985 11.4356 23.6985 10.3684C23.6985 9.30111 24.5639 8.43577 25.6311 8.43577C26.6984 8.43577 27.5637 9.30111 27.5637 10.3684ZM33.0514 12.3298C32.9288 9.74099 32.3375 7.44783 30.441 5.5585C28.5516 3.66917 26.2585 3.07785 23.6697 2.94805C21.0015 2.79661 13.0043 2.79661 10.3362 2.94805C7.75455 3.07064 5.46139 3.66196 3.56485 5.55129C1.66831 7.44062 1.0842 9.73378 0.954397 12.3226C0.802962 14.9907 0.802962 22.988 0.954397 25.6561C1.07699 28.2449 1.66831 30.5381 3.56485 32.4274C5.46139 34.3167 7.74734 34.9081 10.3362 35.0379C13.0043 35.1893 21.0015 35.1893 23.6697 35.0379C26.2585 34.9153 28.5516 34.324 30.441 32.4274C32.3303 30.5381 32.9216 28.2449 33.0514 25.6561C33.2029 22.988 33.2029 14.998 33.0514 12.3298ZM29.6045 28.5189C29.042 29.9323 27.9531 31.0212 26.5325 31.5909C24.4052 32.4346 19.3574 32.2399 17.0065 32.2399C14.6557 32.2399 9.60062 32.4274 7.48053 31.5909C6.06713 31.0284 4.97824 29.9396 4.40856 28.5189C3.56485 26.3916 3.75955 21.3438 3.75955 18.993C3.75955 16.6421 3.57206 11.5871 4.40856 9.46697C4.97103 8.05358 6.05992 6.96468 7.48053 6.395C9.60783 5.55129 14.6557 5.74599 17.0065 5.74599C19.3574 5.74599 24.4124 5.5585 26.5325 6.395C27.9459 6.95747 29.0348 8.04636 29.6045 9.46697C30.4482 11.5943 30.2535 16.6421 30.2535 18.993C30.2535 21.3438 30.4482 26.3989 29.6045 28.5189Z"
                    fill="#6B6B6B"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_93_7377">
                    <rect
                      width="32.3062"
                      height="36.9213"
                      fill="white"
                      transform="translate(0.84668 0.539551)"
                    />
                  </clipPath>
                </defs>
              </svg>
            </a>
          </div>
          <div class="SNS_icon twitter">
            <a href="/">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="32"
                height="32"
                viewBox="0 0 32 32"
                fill="none"
              >
                <g clip-path="url(#clip0_93_7387)">
                  <path
                    d="M28.7106 9.48201C28.7309 9.76626 28.7309 10.0506 28.7309 10.3348C28.7309 19.0048 22.132 28.9947 10.0711 28.9947C6.35531 28.9947 2.90356 27.9185 0 26.0506C0.527938 26.1114 1.0355 26.1318 1.58375 26.1318C4.64969 26.1318 7.47206 25.0963 9.72588 23.3298C6.84263 23.2688 4.42638 21.3805 3.59388 18.7815C4 18.8424 4.40606 18.883 4.8325 18.883C5.42131 18.883 6.01019 18.8018 6.55838 18.6597C3.55331 18.0505 1.29944 15.4109 1.29944 12.2231V12.1419C2.1725 12.6293 3.18781 12.9338 4.26388 12.9744C2.49738 11.7967 1.34006 9.78657 1.34006 7.51245C1.34006 6.2942 1.66488 5.17745 2.23344 4.20282C5.46188 8.18251 10.3147 10.7814 15.7563 11.0658C15.6548 10.5784 15.5938 10.0709 15.5938 9.56326C15.5938 5.94901 18.5177 3.00488 22.1522 3.00488C24.0405 3.00488 25.7461 3.79676 26.9441 5.07595C28.4263 4.7917 29.8476 4.24345 31.1065 3.4922C30.6191 5.01507 29.5836 6.29426 28.2233 7.10638C29.5431 6.96432 30.8223 6.59876 31.9999 6.0912C31.1066 7.39063 29.9898 8.54795 28.7106 9.48201Z"
                    fill="#6B6B6B"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_93_7387">
                    <rect width="32" height="32" fill="white" />
                  </clipPath>
                </defs>
              </svg>
            </a>
          </div>
          <div class="SNS_icon facebook">
            <a href="/">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="22"
                height="36"
                viewBox="0 0 22 36"
                fill="none"
              >
                <g clip-path="url(#clip0_93_7397)">
                  <path
                    d="M19.0814 20.1707L20.046 13.8853H14.015V9.80646C14.015 8.08689 14.8575 6.41074 17.5586 6.41074H20.3004V1.0594C20.3004 1.0594 17.8123 0.634766 15.4334 0.634766C10.4666 0.634766 7.22014 3.64519 7.22014 9.09489V13.8853H1.69922V20.1707H7.22014V35.3652H14.015V20.1707H19.0814Z"
                    fill="#6B6B6B"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_93_7397">
                    <rect
                      width="21.7065"
                      height="34.7305"
                      fill="white"
                      transform="translate(0.146484 0.634766)"
                    />
                  </clipPath>
                </defs>
              </svg>
            </a>
          </div>
        </div>
        <p class="copyright">Copyright © 주식회사 티빙 All right reserved.</p>
      </section>
    </footer>
    `}}customElements.define("c-footer",X);
